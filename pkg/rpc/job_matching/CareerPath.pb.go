// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.2
// source: pkg/rpc/proto/CareerPath.proto

package jobMatching

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HealthCheckResponse_ServingStatus int32

const (
	HealthCheckResponse_UNKNOWN         HealthCheckResponse_ServingStatus = 0
	HealthCheckResponse_SERVING         HealthCheckResponse_ServingStatus = 1
	HealthCheckResponse_NOT_SERVING     HealthCheckResponse_ServingStatus = 2
	HealthCheckResponse_SERVICE_UNKNOWN HealthCheckResponse_ServingStatus = 3
)

// Enum value maps for HealthCheckResponse_ServingStatus.
var (
	HealthCheckResponse_ServingStatus_name = map[int32]string{
		0: "UNKNOWN",
		1: "SERVING",
		2: "NOT_SERVING",
		3: "SERVICE_UNKNOWN",
	}
	HealthCheckResponse_ServingStatus_value = map[string]int32{
		"UNKNOWN":         0,
		"SERVING":         1,
		"NOT_SERVING":     2,
		"SERVICE_UNKNOWN": 3,
	}
)

func (x HealthCheckResponse_ServingStatus) Enum() *HealthCheckResponse_ServingStatus {
	p := new(HealthCheckResponse_ServingStatus)
	*p = x
	return p
}

func (x HealthCheckResponse_ServingStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HealthCheckResponse_ServingStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_rpc_proto_CareerPath_proto_enumTypes[0].Descriptor()
}

func (HealthCheckResponse_ServingStatus) Type() protoreflect.EnumType {
	return &file_pkg_rpc_proto_CareerPath_proto_enumTypes[0]
}

func (x HealthCheckResponse_ServingStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HealthCheckResponse_ServingStatus.Descriptor instead.
func (HealthCheckResponse_ServingStatus) EnumDescriptor() ([]byte, []int) {
	return file_pkg_rpc_proto_CareerPath_proto_rawDescGZIP(), []int{6, 0}
}

// Message for a job posting
type Job struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Company     string  `protobuf:"bytes,1,opt,name=company,proto3" json:"company,omitempty"`
	Title       string  `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description string  `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Link        string  `protobuf:"bytes,4,opt,name=link,proto3" json:"link,omitempty"`
	Score       float32 `protobuf:"fixed32,5,opt,name=score,proto3" json:"score,omitempty"`
}

func (x *Job) Reset() {
	*x = Job{}
	mi := &file_pkg_rpc_proto_CareerPath_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Job) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Job) ProtoMessage() {}

func (x *Job) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_proto_CareerPath_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Job.ProtoReflect.Descriptor instead.
func (*Job) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_proto_CareerPath_proto_rawDescGZIP(), []int{0}
}

func (x *Job) GetCompany() string {
	if x != nil {
		return x.Company
	}
	return ""
}

func (x *Job) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Job) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Job) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *Job) GetScore() float32 {
	if x != nil {
		return x.Score
	}
	return 0
}

// Request message for comparing CVs
type CompareCVRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CvJson string `protobuf:"bytes,1,opt,name=cv_json,json=cvJson,proto3" json:"cv_json,omitempty"` // JSON representation of the CV
}

func (x *CompareCVRequest) Reset() {
	*x = CompareCVRequest{}
	mi := &file_pkg_rpc_proto_CareerPath_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompareCVRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompareCVRequest) ProtoMessage() {}

func (x *CompareCVRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_proto_CareerPath_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompareCVRequest.ProtoReflect.Descriptor instead.
func (*CompareCVRequest) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_proto_CareerPath_proto_rawDescGZIP(), []int{1}
}

func (x *CompareCVRequest) GetCvJson() string {
	if x != nil {
		return x.CvJson
	}
	return ""
}

// Response message for comparing CVs
type CompareCVResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FinalScore     float32 `protobuf:"fixed32,1,opt,name=final_score,json=finalScore,proto3" json:"final_score,omitempty"`           // Final score of the CV
	OverallMessage string  `protobuf:"bytes,2,opt,name=overall_message,json=overallMessage,proto3" json:"overall_message,omitempty"` // Overall feedback message
	AdviceMessage  string  `protobuf:"bytes,3,opt,name=advice_message,json=adviceMessage,proto3" json:"advice_message,omitempty"`    // Advice for improvement
}

func (x *CompareCVResponse) Reset() {
	*x = CompareCVResponse{}
	mi := &file_pkg_rpc_proto_CareerPath_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompareCVResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompareCVResponse) ProtoMessage() {}

func (x *CompareCVResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_proto_CareerPath_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompareCVResponse.ProtoReflect.Descriptor instead.
func (*CompareCVResponse) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_proto_CareerPath_proto_rawDescGZIP(), []int{2}
}

func (x *CompareCVResponse) GetFinalScore() float32 {
	if x != nil {
		return x.FinalScore
	}
	return 0
}

func (x *CompareCVResponse) GetOverallMessage() string {
	if x != nil {
		return x.OverallMessage
	}
	return ""
}

func (x *CompareCVResponse) GetAdviceMessage() string {
	if x != nil {
		return x.AdviceMessage
	}
	return ""
}

// Request message for finding jobs
type FindJobsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExperienceAndSkills string `protobuf:"bytes,1,opt,name=experience_and_skills,json=experienceAndSkills,proto3" json:"experience_and_skills,omitempty"` // User's experience and skills
}

func (x *FindJobsRequest) Reset() {
	*x = FindJobsRequest{}
	mi := &file_pkg_rpc_proto_CareerPath_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindJobsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindJobsRequest) ProtoMessage() {}

func (x *FindJobsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_proto_CareerPath_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindJobsRequest.ProtoReflect.Descriptor instead.
func (*FindJobsRequest) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_proto_CareerPath_proto_rawDescGZIP(), []int{3}
}

func (x *FindJobsRequest) GetExperienceAndSkills() string {
	if x != nil {
		return x.ExperienceAndSkills
	}
	return ""
}

// Response message for finding jobs
type FindJobsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Jobs []*Job `protobuf:"bytes,1,rep,name=jobs,proto3" json:"jobs,omitempty"` // List of matching jobs
}

func (x *FindJobsResponse) Reset() {
	*x = FindJobsResponse{}
	mi := &file_pkg_rpc_proto_CareerPath_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindJobsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindJobsResponse) ProtoMessage() {}

func (x *FindJobsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_proto_CareerPath_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindJobsResponse.ProtoReflect.Descriptor instead.
func (*FindJobsResponse) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_proto_CareerPath_proto_rawDescGZIP(), []int{4}
}

func (x *FindJobsResponse) GetJobs() []*Job {
	if x != nil {
		return x.Jobs
	}
	return nil
}

type HealthCheckRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Service string `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
}

func (x *HealthCheckRequest) Reset() {
	*x = HealthCheckRequest{}
	mi := &file_pkg_rpc_proto_CareerPath_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckRequest) ProtoMessage() {}

func (x *HealthCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_proto_CareerPath_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckRequest.ProtoReflect.Descriptor instead.
func (*HealthCheckRequest) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_proto_CareerPath_proto_rawDescGZIP(), []int{5}
}

func (x *HealthCheckRequest) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

type HealthCheckResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status HealthCheckResponse_ServingStatus `protobuf:"varint,1,opt,name=status,proto3,enum=jobmatching.HealthCheckResponse_ServingStatus" json:"status,omitempty"`
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	mi := &file_pkg_rpc_proto_CareerPath_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_proto_CareerPath_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_proto_CareerPath_proto_rawDescGZIP(), []int{6}
}

func (x *HealthCheckResponse) GetStatus() HealthCheckResponse_ServingStatus {
	if x != nil {
		return x.Status
	}
	return HealthCheckResponse_UNKNOWN
}

var File_pkg_rpc_proto_CareerPath_proto protoreflect.FileDescriptor

var file_pkg_rpc_proto_CareerPath_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x70, 0x6b, 0x67, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x43, 0x61, 0x72, 0x65, 0x65, 0x72, 0x50, 0x61, 0x74, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0b, 0x6a, 0x6f, 0x62, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x22, 0x81, 0x01,
	0x0a, 0x03, 0x4a, 0x6f, 0x62, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72,
	0x65, 0x22, 0x2b, 0x0a, 0x10, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x43, 0x56, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x76, 0x5f, 0x6a, 0x73, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x76, 0x4a, 0x73, 0x6f, 0x6e, 0x22, 0x84,
	0x01, 0x0a, 0x11, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x43, 0x56, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x61, 0x6c,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c,
	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x6f, 0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x25,
	0x0a, 0x0e, 0x61, 0x64, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x64, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x45, 0x0a, 0x0f, 0x46, 0x69, 0x6e, 0x64, 0x4a, 0x6f, 0x62,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x65, 0x78, 0x70, 0x65,
	0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x73, 0x6b, 0x69, 0x6c, 0x6c,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65,
	0x6e, 0x63, 0x65, 0x41, 0x6e, 0x64, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x22, 0x38, 0x0a, 0x10,
	0x46, 0x69, 0x6e, 0x64, 0x4a, 0x6f, 0x62, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x24, 0x0a, 0x04, 0x6a, 0x6f, 0x62, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x6a, 0x6f, 0x62, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x4a, 0x6f, 0x62,
	0x52, 0x04, 0x6a, 0x6f, 0x62, 0x73, 0x22, 0x2e, 0x0a, 0x12, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0xae, 0x01, 0x0a, 0x13, 0x48, 0x65, 0x61, 0x6c, 0x74,
	0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e,
	0x2e, 0x6a, 0x6f, 0x62, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x48, 0x65, 0x61,
	0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x4f, 0x0a, 0x0d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x6e,
	0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x45, 0x52, 0x56, 0x49, 0x4e, 0x47, 0x10,
	0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x4e, 0x4f, 0x54, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x4e, 0x47,
	0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x55, 0x4e,
	0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x03, 0x32, 0xbb, 0x02, 0x0a, 0x0a, 0x43, 0x61, 0x72, 0x65,
	0x65, 0x72, 0x50, 0x61, 0x74, 0x68, 0x12, 0x4a, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72,
	0x65, 0x43, 0x56, 0x12, 0x1d, 0x2e, 0x6a, 0x6f, 0x62, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e,
	0x67, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x43, 0x56, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6a, 0x6f, 0x62, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67,
	0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x43, 0x56, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x47, 0x0a, 0x08, 0x46, 0x69, 0x6e, 0x64, 0x4a, 0x6f, 0x62, 0x73, 0x12, 0x1c,
	0x2e, 0x6a, 0x6f, 0x62, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x46, 0x69, 0x6e,
	0x64, 0x4a, 0x6f, 0x62, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6a,
	0x6f, 0x62, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4a,
	0x6f, 0x62, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x05, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x12, 0x1f, 0x2e, 0x6a, 0x6f, 0x62, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69,
	0x6e, 0x67, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x6a, 0x6f, 0x62, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x69, 0x6e, 0x67, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x05, 0x57, 0x61, 0x74, 0x63, 0x68,
	0x12, 0x1f, 0x2e, 0x6a, 0x6f, 0x62, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x48,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x20, 0x2e, 0x6a, 0x6f, 0x62, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x2e,
	0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x30, 0x01, 0x42, 0x1e, 0x5a, 0x1c, 0x2e, 0x2e, 0x2f, 0x6a, 0x6f, 0x62, 0x5f,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x3b, 0x6a, 0x6f, 0x62, 0x5f, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x69, 0x6e, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_rpc_proto_CareerPath_proto_rawDescOnce sync.Once
	file_pkg_rpc_proto_CareerPath_proto_rawDescData = file_pkg_rpc_proto_CareerPath_proto_rawDesc
)

func file_pkg_rpc_proto_CareerPath_proto_rawDescGZIP() []byte {
	file_pkg_rpc_proto_CareerPath_proto_rawDescOnce.Do(func() {
		file_pkg_rpc_proto_CareerPath_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_rpc_proto_CareerPath_proto_rawDescData)
	})
	return file_pkg_rpc_proto_CareerPath_proto_rawDescData
}

var file_pkg_rpc_proto_CareerPath_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_pkg_rpc_proto_CareerPath_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_pkg_rpc_proto_CareerPath_proto_goTypes = []any{
	(HealthCheckResponse_ServingStatus)(0), // 0: jobmatching.HealthCheckResponse.ServingStatus
	(*Job)(nil),                            // 1: jobmatching.Job
	(*CompareCVRequest)(nil),               // 2: jobmatching.CompareCVRequest
	(*CompareCVResponse)(nil),              // 3: jobmatching.CompareCVResponse
	(*FindJobsRequest)(nil),                // 4: jobmatching.FindJobsRequest
	(*FindJobsResponse)(nil),               // 5: jobmatching.FindJobsResponse
	(*HealthCheckRequest)(nil),             // 6: jobmatching.HealthCheckRequest
	(*HealthCheckResponse)(nil),            // 7: jobmatching.HealthCheckResponse
}
var file_pkg_rpc_proto_CareerPath_proto_depIdxs = []int32{
	1, // 0: jobmatching.FindJobsResponse.jobs:type_name -> jobmatching.Job
	0, // 1: jobmatching.HealthCheckResponse.status:type_name -> jobmatching.HealthCheckResponse.ServingStatus
	2, // 2: jobmatching.CareerPath.CompareCV:input_type -> jobmatching.CompareCVRequest
	4, // 3: jobmatching.CareerPath.FindJobs:input_type -> jobmatching.FindJobsRequest
	6, // 4: jobmatching.CareerPath.Check:input_type -> jobmatching.HealthCheckRequest
	6, // 5: jobmatching.CareerPath.Watch:input_type -> jobmatching.HealthCheckRequest
	3, // 6: jobmatching.CareerPath.CompareCV:output_type -> jobmatching.CompareCVResponse
	5, // 7: jobmatching.CareerPath.FindJobs:output_type -> jobmatching.FindJobsResponse
	7, // 8: jobmatching.CareerPath.Check:output_type -> jobmatching.HealthCheckResponse
	7, // 9: jobmatching.CareerPath.Watch:output_type -> jobmatching.HealthCheckResponse
	6, // [6:10] is the sub-list for method output_type
	2, // [2:6] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_pkg_rpc_proto_CareerPath_proto_init() }
func file_pkg_rpc_proto_CareerPath_proto_init() {
	if File_pkg_rpc_proto_CareerPath_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_rpc_proto_CareerPath_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_rpc_proto_CareerPath_proto_goTypes,
		DependencyIndexes: file_pkg_rpc_proto_CareerPath_proto_depIdxs,
		EnumInfos:         file_pkg_rpc_proto_CareerPath_proto_enumTypes,
		MessageInfos:      file_pkg_rpc_proto_CareerPath_proto_msgTypes,
	}.Build()
	File_pkg_rpc_proto_CareerPath_proto = out.File
	file_pkg_rpc_proto_CareerPath_proto_rawDesc = nil
	file_pkg_rpc_proto_CareerPath_proto_goTypes = nil
	file_pkg_rpc_proto_CareerPath_proto_depIdxs = nil
}
